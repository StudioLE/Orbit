#cloud-config

hostname: vm999

apt:
  preserve_sources_list: true
package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - qemu-guest-agent

users:
  - name: radiko
    groups: sudo
    shell: /bin/bash
    # TODO: Remove password
    lock_passwd: false
    plain_text_passwd: pw
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys: 
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBBCUt4uHcGH8b4xf8aJSCvg3EXW5Pom0LyV7ll5EQTYmDux/B7CWh+W8C7xMZzKAspat/uyXe2lsCzN6ruwZHbtms0T3M6hxygUv7xkZlKnPlfLXmvjleLZj5PmehAZay1o3rIFvxw57uq0kxzJasqzutHpA3i9+l1occoj8Xp/MT/FT3kglg40ZLReOjOC9ZcsIm/KATuvU0T/xprVE0nAwSgt5oz1ueWG4KnE2HmszHPSfSZgq5Zxzhnvn+CnJ/sM7oqYik28QvzTYMg9a7u98NoZXeNJzXsqies6VlwL6Q5Qvzl0IV8IwlLXvquQwEBITdYJCEf9la2i/4qUsN root@saturn
  - name: stivisto
    shell: /bin/bash
    # TODO: Remove password
    lock_passwd: false
    plain_text_passwd: pw
    ssh_authorized_keys: 
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBBCUt4uHcGH8b4xf8aJSCvg3EXW5Pom0LyV7ll5EQTYmDux/B7CWh+W8C7xMZzKAspat/uyXe2lsCzN6ruwZHbtms0T3M6hxygUv7xkZlKnPlfLXmvjleLZj5PmehAZay1o3rIFvxw57uq0kxzJasqzutHpA3i9+l1occoj8Xp/MT/FT3kglg40ZLReOjOC9ZcsIm/KATuvU0T/xprVE0nAwSgt5oz1ueWG4KnE2HmszHPSfSZgq5Zxzhnvn+CnJ/sM7oqYik28QvzTYMg9a7u98NoZXeNJzXsqies6VlwL6Q5Qvzl0IV8IwlLXvquQwEBITdYJCEf9la2i/4qUsN root@saturn

write_files:

  - path: /etc/ssh/sshd_config
    append: true
    content: |
      PermitRootLogin no
      PasswordAuthentication no
      Port 4444

  - path: /var/lib/cloud/scripts/per-instance/10-install-docker.sh
    permissions: "0500"
    content: |
      #!/bin/bash
      set -euo pipefail
      
      # Install docker
      # Source: https://docs.docker.com/engine/install/ubuntu/
      
      echo "➡️  Uninstall old versions"
      set +e
      for PACKAGE in docker docker-engine docker.io containerd runc
      do
      sudo apt-get remove "$PACKAGE" --quiet --yes
      done
      set -e
      
      echo "➡️  Install apt dependencies"
      sudo apt-get update
      sudo apt-get install --quiet --yes \
      ca-certificates \
      curl \
      gnupg
      
      echo "➡️  Add Docker official GPG key"
      sudo mkdir -m 0755 -p /etc/apt/keyrings
      curl --fail --silent --show-error --location \
      https://download.docker.com/linux/ubuntu/gpg \
      | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      
      echo "➡️  Set up the repository"
      echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      
      echo "➡️  Install Docker Engine"
      sudo apt-get update
      sudo apt-get install --quiet --yes \
      docker-ce \
      docker-ce-cli \
      containerd.io \
      docker-buildx-plugin \
      docker-compose-plugin
      
      
      # Post install steps
      # Source: https://docs.docker.com/engine/install/linux-postinstall/
      
      echo "➡️  Create the docker group"
      set +e
      sudo groupadd docker
      set -e
      
      echo "➡️  Add user to group"
      sudo usermod -aG docker "radiko"
      
      echo "➡️  Reload groups"
      newgrp docker
      
      # TODO: Change docker logging provider
      # Source: https://docs.docker.com/engine/install/linux-postinstall/#configure-default-logging-driver

  - path: /var/lib/cloud/scripts/per-instance/20-install-cri-dockerd.sh
    permissions: "0500"
    content: |
      #!/bin/bash
      set -euo pipefail
      
      # Install cri-dockerd
      
      echo "➡️  Download"
      wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.1/cri-dockerd_0.3.1.3-0.ubuntu-jammy_amd64.deb --no-verbose
      
      echo "➡️  Install"
      sudo dpkg -i "cri-dockerd_0.3.1.3-0.ubuntu-jammy_amd64.deb"

  - path: /var/lib/cloud/scripts/per-instance/30-install-kubernetes.sh
    permissions: "0500"
    content: |
      #!/bin/bash
      set -euo pipefail
      
      # Install kubeadm, kubelet, and kubectl
      # Source:
      
      echo "➡️  Install apt dependencies"
      sudo apt-get update
      sudo apt-get install --quiet --yes \
      ca-certificates \
      curl \
      gnupg
      
      echo "➡️  Download the Google Cloud public signing key"
      sudo curl --fail --silent --show-error --location \
      --output /etc/apt/keyrings/kubernetes-archive-keyring.gpg \
      https://packages.cloud.google.com/apt/doc/apt-key.gpg
      
      
      echo "➡️  Add the Kubernetes apt repository"
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      
      echo "➡️  Install kubelet, kubeadm and kubectl, and pin their version"
      sudo apt-get update
      sudo apt-get install --yes \
      kubelet \
      kubeadm \
      kubectl
      
      # TODO: We probably need to fetch a specific version..
      sudo apt-mark hold kubelet kubeadm kubectl

bootcmd: 
  - echo "*********************************"
  - echo "Executing bootcmd"
  - echo "*********************************"
  - if [ ! -f /root/first-run-complete ]; then echo "IS FIRST RUN"; else echo "NOT FIRST RUN"; fi
  - if [ ! -f /root/first-run-complete ]; then netplan apply; fi
  - echo "###### IP Addresses"
  - ip -c -br addr
  - echo "###### IP Routes"
  - ip -c route

runcmd: 
  - echo "*********************************"
  - echo "Executing runcmd"
  - echo "*********************************"
  - systemctl restart ssh
  - systemctl start qemu-guest-agent
  - touch /root/first-run-complete
