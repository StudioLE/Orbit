name: CI/CD

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test-ubuntu:
    name: Ubuntu
    uses: StudioLE/Actions/.github/workflows/dotnet-test.yml@v7
    with:
      project: ""
      os: ubuntu-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
      pack: true
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  test-windows:
    name: Windows
    if: github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name)
    uses: StudioLE/Actions/.github/workflows/dotnet-test.yml@v7
    with:
      project: ""
      os: windows-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  publish-cli-linux:
    name: Linux CLI
    if: github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name)
    uses: StudioLE/Actions/.github/workflows/dotnet-publish.yml@v7
    with:
      project: StudioLE.Orbit.Cli/src/StudioLE.Orbit.Cli.csproj
      runtime: linux-x64
      npm: ""
      workload: ""
      properties: >
        -p:PublishSingleFile=true
        -p:IncludeNativeLibrariesForSelfExtract=true
        -p:SelfContained=false
        -p:DebugType=embedded
        -p:GenerateDocumentationFile=false
      artifact: Cli-Linux
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  publish-cli-windows:
    name: Windows CLI
    if: github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name)
    uses: StudioLE/Actions/.github/workflows/dotnet-publish.yml@v7
    with:
      project: StudioLE.Orbit.Cli/src/StudioLE.Orbit.Cli.csproj
      runtime: win-x64
      npm: ""
      workload: ""
      properties: >
        -p:PublishSingleFile=true
        -p:IncludeNativeLibrariesForSelfExtract=true
        -p:SelfContained=false
        -p:DebugType=embedded
        -p:GenerateDocumentationFile=false
      artifact: Cli-Windows
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  documentation:
    name: Documentation
    if: github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name)
    uses: StudioLE/Actions/.github/workflows/illuminate-generate.yml@v7
    with:
      project: ""
      os: ubuntu-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
      latest: ${{ github.ref_type == 'branch' && github.ref_name == 'release' }}
      source: "*/src/bin/Release/*/StudioLE.*.dll"
      section: "orbit"
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  release:
    name: Release
    if: github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name)
    needs:
    - test-ubuntu
    uses: StudioLE/Actions/.github/workflows/surveyor-release.yml@v7
    with:
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  docker-build:
    name: Docker Build
    if: github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name)
    uses: StudioLE/Actions/.github/workflows/docker-build.yml@v7
    with:
      name: orbit
      user: studiole
    secrets:
      password: ${{ secrets.GITHUB_TOKEN }}

  docker-push-prerelease:
    name: Prerelease
    if: needs.release.outputs.type == 'prerelease'
    needs:
    - docker-build
    - release
    uses: StudioLE/Actions/.github/workflows/docker-push.yml@v7
    with:
      name: orbit
      user: studiole
      version: ${{ needs.release.outputs.version }}
      tag: alpha
    secrets:
      password: ${{ secrets.GITHUB_TOKEN }}

  docker-push-release:
    name: Release
    if: needs.release.outputs.type == 'release'
    needs:
    - docker-build
    - release
    uses: StudioLE/Actions/.github/workflows/docker-push.yml@v7
    with:
      name: orbit
      user: studiole
      version: ${{ needs.release.outputs.version }}
      tag: latest
    secrets:
      password: ${{ secrets.GITHUB_TOKEN }}

  push-tests:
    name: Test Results
    if: always()
    needs:
    - test-ubuntu
    uses: StudioLE/Actions/.github/workflows/push-to-repo.yml@v7
    with:
      repo: StudioLE/Tests
      artifact: Tests-Linux-X64
      rm: "${{ github.repository }}/${{ github.run_id }}"
      path: "${{ github.repository }}/${{ github.run_id }}"
      message: "feat(${{ github.repository }}): Added test results for ${{ github.sha }}"
    secrets:
      repo_token: ${{ secrets.TESTS_TOKEN }}

  push-packages:
    name: Packages
    needs:
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-nuget.yml@v7
    with:
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.GITHUB_TOKEN }}

  push-nuget:
    name: NuGet
    if: needs.release.outputs.type == 'release'
    needs:
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-nuget.yml@v7
    with:
      nuget_feed: https://api.nuget.org/v3/index.json
      nuget_username: ""
    secrets:
      nuget_password: ${{ secrets.NUGET_TOKEN }}

  push-cli-linux:
    name: Linux Cli
    if: needs.release.outputs.type == 'release'
    needs:
    - publish-cli-linux
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-github-releases.yml@v7
    with:
      artifact: Cli-Linux
      name: Orbit-linux-x64-v${{ needs.release.outputs.version }}
      file: false
      version: ${{ needs.release.outputs.version }}

  push-cli-windows:
    name: Windows Cli
    if: needs.release.outputs.type == 'release'
    needs:
    - test-windows
    - publish-cli-windows
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-github-releases.yml@v7
    with:
      artifact: Cli-Windows
      name: Orbit-win-x64-v${{ needs.release.outputs.version }}.exe
      file: false
      version: ${{ needs.release.outputs.version }}

  push-documentation:
    name: Documentation
    if: needs.release.outputs.type == 'release'
    needs:
    - documentation
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-repo.yml@v7
    with:
      repo: StudioLE/Documentation
      artifact: Documentation
      path: ""
      message: "feat(orbit): Added documentation for v${{ needs.release.outputs.version }}"
    secrets:
      repo_token: ${{ secrets.DOCUMENTATION_TOKEN }}

  environment:
    name: Environment
    if: needs.release.outputs.environment != ''
    needs:
    - release
    runs-on: ubuntu-latest
    environment: ${{ needs.release.outputs.environment }}
    steps:
    - run: |
        echo "Environment: ${{ needs.release.outputs.environment }}"
