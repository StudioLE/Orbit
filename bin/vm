#!/bin/bash
set -euo pipefail

# IMPORTS

source /srv/lib/args/get-args.sh
source /srv/lib/args/get-arg.sh

# ARGS

get-args "$@"

declare COMMAND
COMMAND=$(get-arg "0")

declare ID
ID=$(get-arg "1")

declare ALL
ALL=$(get-arg "--all")

# START

declare START_USAGE="$0 start <ID>"
declare STATUS_USAGE="$0 status <ID>"
declare SSH_USAGE="$0 ssh <ID>"
declare DESTROY_USAGE="$0 destroy --all"
declare CREATE_USAGE="$0 create"

if [[ "${COMMAND}" == "start" ]]
then

  if [[ "${ID}" != "" ]]
  then
    /srv/lib/vm/start-vm.sh "${ID}"
  else
    echo "❗  Invalid arguments." >&2
    echo "Usage: ${START_USAGE}"
    exit 1
  fi

elif [[ "${COMMAND}" == "status" ]]
then

  if [[ "${ID}" != "" ]]
  then
    /srv/lib/vm/get-vm-status.sh "${ID}"
  else
    echo "❗  Invalid arguments." >&2
    echo "Usage: ${STATUS_USAGE}"
    exit 1
  fi

elif [[ "${COMMAND}" == "destroy" ]]
then

  if [[ "${ALL}" != "" ]]
  then
    /srv/lib/vm/destroy-stopped-vm.sh
  else
    echo "❗  Invalid arguments." >&2
    echo "Usage: ${DESTROY_USAGE}"
    exit 1
  fi

elif [[ "${COMMAND}" == "create" ]]
then

  /srv/lib/vm/create-vm.sh "$@"

elif [[ "${COMMAND}" == "ssh" ]]
then

  if [[ "${ID}" != "" ]]
  then
    /srv/lib/vm/ssh-vm.sh "${ID}"
  else
    echo "❗  Invalid arguments." >&2
    echo "Usage: ${SSH_USAGE}"
    exit 1
  fi

elif [[ "${COMMAND}" == "help" || -v "ARGS[--help]" ]]
then
  echo "Usage: ${START_USAGE}"
  echo "Usage: ${STATUS_USAGE}"
  echo "Usage: ${SSH_USAGE}"
  echo "Usage: ${DESTROY_USAGE}"
  echo "Usage: ${CREATE_USAGE}"
else
  echo "❗  Invalid arguments." >&2
  echo "Usage: ${START_USAGE}"
  echo "Usage: ${STATUS_USAGE}"
  echo "Usage: ${SSH_USAGE}"
  echo "Usage: ${DESTROY_USAGE}"
  echo "Usage: ${CREATE_USAGE}"
  exit 1
fi
