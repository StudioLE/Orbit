#cloud-config

hostname: instance-01
apt:
  preserve_sources_list: true
package_update: true
package_upgrade: true
package_reboot_if_required: true
users:
- name: admin
  groups: sudo
  shell: /bin/bash
  lock_passwd: false
  plain_text_passwd: pw
  sudo: ALL=(ALL) NOPASSWD:ALL
  ssh_authorized_keys: []
- name: user
  shell: /bin/bash
  lock_passwd: false
  plain_text_passwd: pw
  ssh_authorized_keys: []
wireguard:
  interfaces:
  - name: wg1
    config_path: /etc/wireguard/wg1.conf
    content: |-
      [Interface]
      PrivateKey = 8Dh1P7/6fm9C/wHYzDrEhnyKmFgzL6yH6WuslXPLbVQ=
      Address = 10.1.1.0
      Address = fc00:1:1::
      [Peer]
      PublicKey = Rc9kAH9gclSHur2vbbmIj3pvWizuxB5ly1Drv0tRXRE=
      AllowedIPs = 0.0.0.0/0, ::/0
      Endpoint = 203.0.113.1:51820
write_files:
- path: /etc/ssh/sshd_config
  append: true
  content: |
    PermitRootLogin no
    PasswordAuthentication no
    Port 22
- path: /var/lib/cloud/scripts/per-instance/00-log.sh
  permissions: 0o500
  content: |
    #!/bin/bash
    set -euo pipefail

    date --rfc-3339 ns | tr '\n' ' ' | sudo tee -a /var/log/orbit.log
    echo "Executing installers" | sudo tee -a /var/log/orbit.log
- path: /var/lib/cloud/scripts/per-instance/10-install-docker.sh
  permissions: 0o500
  content: |
    #!/bin/bash
    set -euo pipefail

    # Install docker
    # Source: https://docs.docker.com/engine/install/ubuntu/

    echo "➡️  Uninstall old versions"
    set +e
    for PACKAGE in docker docker-engine docker.io containerd runc
    do
      sudo apt-get remove "$PACKAGE" --quiet --yes
    done
    set -e

    echo "➡️  Install apt dependencies"
    sudo apt-get update
    sudo apt-get install --quiet --yes \
      ca-certificates \
      curl \
      gnupg

    echo "➡️  Add Docker official GPG key"
    sudo mkdir -m 0755 -p /etc/apt/keyrings
    curl --fail --silent --show-error --location \
      https://download.docker.com/linux/ubuntu/gpg \
      | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    echo "➡️  Set up the repository"
    echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    echo "➡️  Install Docker Engine"
    sudo apt-get update
    sudo apt-get install --quiet --yes \
      docker-ce \
      docker-ce-cli \
      containerd.io \
      docker-buildx-plugin \
      docker-compose-plugin


    # Post install steps
    # Source: https://docs.docker.com/engine/install/linux-postinstall/

    echo "➡️  Create the docker group"
    set +e
    sudo groupadd docker
    set -e

    echo "➡️  Add user to group"
    sudo usermod -aG docker "admin"

    echo "➡️  Reload groups"
    newgrp docker

    # TODO: Change docker logging provider
    # Source: https://docs.docker.com/engine/install/linux-postinstall/#configure-default-logging-driver
- path: /var/lib/cloud/scripts/per-instance/15-install-docker-compose.sh
  permissions: 0o500
  content: |
    #!/bin/bash
    set -euo pipefail

    # Install docker-compose-plugin
    # Source: https://docs.docker.com/compose/install/linux/#install-using-the-repository

    echo "➡️  Install docker compose"
    sudo apt-get update
    sudo apt-get install docker-compose-plugin
- path: /var/lib/cloud/scripts/per-instance/99-log.sh
  permissions: 0o500
  content: |
    #!/bin/bash
    set -euo pipefail

    date --rfc-3339 ns | tr '\n' ' ' | sudo tee -a /var/log/orbit.log
    echo "Executed installers" | sudo tee -a /var/log/orbit.log
bootcmd:
- echo "*********************************"
- echo "Executing bootcmd"
- echo "*********************************"
- echo "###### IP Addresses"
- ip -br addr
- echo "###### IP Routes"
- ip route
- date --rfc-3339 ns | tr '\n' ' ' | sudo tee -a /var/log/orbit.log
- echo "Executed bootcmd" | sudo tee -a /var/log/orbit.log
- ''
runcmd:
- echo "*********************************"
- echo "Executing runcmd"
- echo "*********************************"
- systemctl restart ssh
- date --rfc-3339 ns | tr '\n' ' ' | sudo tee -a /var/log/orbit.log
- echo "Executed runcmd" | sudo tee -a /var/log/orbit.log
- ''
